Rules This part of the metadata is one of novel features of the new colored coins protocol which opens up the possibility of creating [http://www.fastcolabs.com/3035723/app-economy/smart-contracts-could-be-cryptocurrencys-killer-app smart contracts] with colored coins.

The current implementation of the colored coins protocol supports 4 kinds of rules: * [[#fees|Fees]]: Pay a fee to specific address on each transfer * [[#expiration|Expiration]]: The asset expires after a while * [[#minters|Minters]]: Recipients of the asset can issue more of it * [[#holders|Holders]]: Only certain Bitcoin addresses can receive this asset

Each one of the above 4 rule types accepts a JSON object (or objects) with two keys ### params Specifying relevant parameters to be discussed below ### Inheritance Specifying how this rule is inherited upon transferring the asset. The inheritance flag can accept the numbers <code>0</code>, <code>1</code> or <code>2</code>. The inheritance rules are less strict (giving more freedom to the new recipient of the asset) as the number increases. Roughly you should think of those numbers as designating: * <code>0</code> : Low privilege (Locked) * <code>1</code> : Limited privilege * <code>2</code> : Admin (Unlocked)

= Fees =

Specifies a list of amount and addresses to which the amounts must be payed on each transfer of the asset.

'''TODO''' are we talking about satoshis or about asset units? is the address a Bitcoin address

=== params ===

The Fees rule can accept an array of JSON objects each specifying the following parameters: * '''amount''': The amount of units of the relevant asset that must be payed to the address * '''address''': The Bitcoin address to which the amount must be transfered

=== Inheritance ===

* '''0''' : The new recipient of the asset cannot add fees
* '''1''' : The new recipient of the asset can add more fees, but only of inheritance level 0
* '''2''' : The new recipient of the asset can add more fees without restriction

= Expiration =

Setting an expiration time for the asset using blocks.

=== params ===

The Expiration rule can accept JSON object with two parameters: * '''blocks''': [[Number%20Encoding|encoded]] integer specifying a block-height or a range. * '''range''': A boolean specifying whether * range = 0 : The block parameter is the height of a specific block that when reached the asset expires, or * range = 1 : The block parameter designates range <code>N</code>. The asset will expire when <code>N</code> blocks were mined on top of the block of the issuance transaction.

=== Inheritance ===

* '''0''' : The new recipient of the asset cannot add an expiration
* '''1''' : The new recipient of the asset can add an expiration, but only of inheritance level 0
* '''2''' : The new recipient of the asset can add an expiration without restriction

'''TODO''' what does it mean to add an expiration if one exists?

= Minters =

Allowing issuance of more units of the asset from certain Bitcoin addresses, regardless of the [[Benefits#coherent-issuance-policy|asset type]].

'''TODO''' can we mint more in an address only if we first have that asset in the address ?

=== params ===

The Minter rule can accept a list of JSON object with a single parameter: * '''address''': A Bitcoin address. Anyone with the private key to this address can issue more units of the asset, even if it is * [[Benefits#locked-assets|locked]] * [[Benefits#unlocked-assets|unlocked]] but the minter doesn't have the private key for the address where it was originally issued .

=== Inheritance ===

* '''0''' : The new recipient of the asset cannot add minters (asset is locked as far as the rules engine is concerned)
* '''1''' : The new recipient of the asset can add minters, but only of inheritance level 0
* '''2''' : The new recipient of the asset can add minters without restriction

= Holders =

Restricting the set of Bitcoin addresses that the asset can be sent to.

=== params ===

The Holders rule can accept a list of JSON object with a single parameter: * '''address''': A Bitcoin address. The asset can only be sent to one of those addresses, so only the limited group that controls this list of addresses can hold the asset.

=== Inheritance ===

* '''0''' : The new recipient of the asset cannot add holders
* '''1''' : The new recipient of the asset can add holders, but only of inheritance level 0
* '''2''' : The new recipient of the asset can add holders without restriction

